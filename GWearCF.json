{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Parameters": {
        "S3BucketNameParam": {
            "Type": "String",
            "Default": "gwearcloud-deployables",
            "Description": "Enter the name of the S3 bucket containing the Lambda deployment packages. Default is gwearcloud-deployables."
        },
        "RDSUsername": {
            "Type": "String",
            "Default": "gwear",
            "Description": "Enter the database username to use. Default is gwear."
        },
        "RDSPassword": {
            "Type": "String",
            "Default": "password",
            "Description": "Enter the database password to use. Default is password."
        },
        "BackupRetention": {
            "Type": "Number",
            "Default": "7",
            "Description": "Enter the number of days to store database backups. Default is 7."
        }
    },
    "Mappings": {
        "RegionMap": {
            "us-east-1": { "ecsami": "ami-0b16d80945b1a9c7d" },
            "us-east-2": { "ecsami": "ami-0e7c12c1bedd6bf21" },
            "us-west-1": { "ecsami": "ami-08a12265d9e050d57" },
            "us-west-2": { "ecsami": "ami-0e434a58221275ed4" }
        }
    },
    "Resources": {
        "RoleRDSAccess": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com",
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "a28e8b25-9170-46c9-b037-f8f36f75d9cf"
                }
            }
        },
        "RoleEcsInstance": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com",
                                    "ecs.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role"
                ],
                "Policies": [
                    {
                        "PolicyName": "ecs-service",
                         "PolicyDocument":{

                            "Statement":[

                                {

                                "Effect":"Allow",

                                "Action":[
                                    "elasticloadbalancing:Describe*",
                                    "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                                    "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
                                    "ec2:Describe*",
                                    "ec2:AuthorizeSecurityGroupIngress"
                                ],

                                "Resource":"*"

                                }

                            ]

                        }
                    }
                ]
            }
        },
        "gwearpublicvpc": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": "10.0.0.0/16",
                "InstanceTenancy": "default",
                "EnableDnsSupport": "true",
                "EnableDnsHostnames": "true",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "GWearCloud-Public"
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "3509a5de-c1a3-4b97-aa7e-64c7a782237b"
                }
            }
        },
        "gwearinternetgateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {},
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "17bc4478-1aa1-48bb-af3a-b9404e084415"
                }
            }
        },
        "gw1": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "gwearpublicvpc"
                },
                "InternetGatewayId": {
                    "Ref": "gwearinternetgateway"
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "79b37fc0-9716-47e3-8c69-bdfa7a27514f"
                }
            }
        },
        "gwearroutetable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "gwearpublicvpc"
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "b0e130a5-879a-485f-b41d-4b38e37a209e"
                }
            }
        },
        "route1": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "RouteTableId": {
                    "Ref": "gwearroutetable"
                },
                "GatewayId": {
                    "Ref": "gwearinternetgateway"
                }
            },
            "DependsOn": "gw1",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "a8ab3214-52fe-49e4-9303-65786d790437"
                }
            }
        },
        "rdsgwear": {
            "Type": "AWS::RDS::DBInstance",
            "Properties": {
                "AllocatedStorage": "20",
                "AllowMajorVersionUpgrade": "false",
                "AutoMinorVersionUpgrade": "true",
                "DBInstanceClass": "db.t2.micro",
                "Port": "5432",
                "PubliclyAccessible": "true",
                "StorageType": "gp2",
                "BackupRetentionPeriod": { "Ref": "BackupRetention" },
                "MasterUsername": { "Ref": "RDSUsername" },
                "MasterUserPassword": { "Ref": "RDSPassword" },
                "PreferredBackupWindow": "09:15-09:45",
                "PreferredMaintenanceWindow": "mon:05:38-mon:06:08",
                "DBName": "gwear",
                "Engine": "postgres",
                "EngineVersion": "10.6",
                "LicenseModel": "postgresql-license",
                "DBSubnetGroupName": { "Ref": "dbsubnetdefault" },
                "VPCSecurityGroups": [
                    { "Ref": "sgPRISMSPrivate" }
                ],
                "Tags": [
                    {
                        "Key": "workload-type",
                        "Value": "other"
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "99fda0e8-f542-419e-bbe0-94cc0e759e8d"
                }
            }
        },
        "gwearsubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": "10.0.0.0/20",
                "VpcId": {
                    "Ref": "gwearpublicvpc"
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "0",
                        { "Fn::GetAZs": "" }
                    ]
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "e162b163-95ac-4050-9e87-0dabfe2bf29d"
                }
            }
        },
        "gwearsubnet2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": "10.0.16.0/20",
                "VpcId": {
                    "Ref": "gwearpublicvpc"
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "1",
                        { "Fn::GetAZs": "" }
                    ]
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "c2ed2836-1948-437d-af15-352705948eef"
                }
            }
        },
        "gwearsubnet3": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": "10.0.32.0/20",
                "VpcId": {
                    "Ref": "gwearpublicvpc"
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "2",
                        { "Fn::GetAZs": "" }
                    ]
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "1a3dcc75-031e-42ee-8f0f-9aa37946fdeb"
                }
            }
        },
        "dbsubnetdefault": {
            "Type": "AWS::RDS::DBSubnetGroup",
            "Properties": {
                "DBSubnetGroupDescription": "default",
                "SubnetIds": [
                    { "Ref": "gwearsubnet1" },
                    { "Ref": "gwearsubnet2" },
                    { "Ref": "gwearsubnet3" }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "80ea2bab-70c0-40a6-a4f2-518ee8cd2e54"
                }
            }
        },
        "gwearSubnetAssoc1" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "SubnetId" : { "Ref" : "gwearsubnet1" },
                "RouteTableId" : { "Ref" : "gwearroutetable" }
            }
        },
        "gwearSubnetAssoc2" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "SubnetId" : { "Ref" : "gwearsubnet2" },
                "RouteTableId" : { "Ref" : "gwearroutetable" }
            }
        },
        "gwearSubnetAssoc3" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "SubnetId" : { "Ref" : "gwearsubnet3" },
                "RouteTableId" : { "Ref" : "gwearroutetable" }
            }
        },
        "sgPRISMS": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Security group for PRISMS server",
                "VpcId": {
                    "Ref": "gwearpublicvpc"
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "10df573e-d67f-4594-bf67-91f5d53d8fcb"
                }
            }
        },
        "sgPRISMSPrivate": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "PRISMS security group for internal resources",
                "VpcId": {
                    "Ref": "gwearpublicvpc"
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "1406b0b9-c7a6-4cbb-a0f0-5b6ebb173846"
                }
            }
        },
        "ingress1": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "sgPRISMS"
                },
                "IpProtocol": "tcp",
                "FromPort": "22",
                "ToPort": "22",
                "CidrIp": "0.0.0.0/0"
            }
        },
        "ingress2": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "sgPRISMS"
                },
                "IpProtocol": "tcp",
                "FromPort": "3000",
                "ToPort": "3000",
                "CidrIp": "0.0.0.0/0"
            }
        },
        "ingress3": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "sgPRISMSPrivate"
                },
                "IpProtocol": "tcp",
                "FromPort": "5432",
                "ToPort": "5432",
                "CidrIp": "0.0.0.0/0"
            }
        },
        "ingress4": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "sgPRISMS"
                },
                "IpProtocol": "tcp",
                "FromPort": "80",
                "ToPort": "80",
                "CidrIp": "0.0.0.0/0"
            }
        },
        "egress1": {
            "Type": "AWS::EC2::SecurityGroupEgress",
            "Properties": {
                "GroupId": {
                    "Ref": "sgPRISMS"
                },
                "IpProtocol": "-1",
                "CidrIp": "0.0.0.0/0"
            }
        },
        "egress2": {
            "Type": "AWS::EC2::SecurityGroupEgress",
            "Properties": {
                "GroupId": {
                    "Ref": "sgPRISMSPrivate"
                },
                "IpProtocol": "-1",
                "CidrIp": "0.0.0.0/0"
            }
        },
        "GWearCloudPOST": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "S3BucketNameParam"
                    },
                    "S3Key": "GWearCloud-POST.zip"
                },
                "Description": "",
                "Tags": [
                    {
                        "Value": "SAM",
                        "Key": "lambda:createdBy"
                    }
                ],
                "MemorySize": 128,
                "Environment": {
                    "Variables": {
                        "HOST": {
                            "Fn::GetAtt": [
                                "rdsgwear",
                                "Endpoint.Address"
                            ]
                        },
                        "PORT": 5432,
                        "DATABASE": "gwear",
                        "USER": { "Ref": "RDSUsername" },
                        "PASSWORD": { "Ref": "RDSPassword" }
                    }
                },
                "Handler": "index.handler",
                "Role": {
                    "Fn::GetAtt": [
                        "RoleRDSAccess",
                        "Arn"
                    ]
                },
                "Timeout": 5,
                "Runtime": "nodejs8.10",
                "VpcConfig": {
                    "SecurityGroupIds": [
                        {
                            "Fn::GetAtt": [
                                "sgPRISMS",
                                "GroupId"
                            ]
                        }
                    ],
                    "SubnetIds": [
                        {
                            "Ref": "gwearsubnet1"
                        },
                        {
                            "Ref": "gwearsubnet2"
                        }
                    ]
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "7dcf69e7-8fd7-4bc5-b161-43cb48c33e94"
                }
            }
        },
        "GWearCloudGETApi1PermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:invokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "FunctionName": {
                    "Ref": "GWearCloudGET"
                },
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/beta/GET/patient-data",
                        {
                            "__Stage__": "Prod",
                            "__ApiId__": {
                                "Ref": "GWearCloudApi"
                            }
                        }
                    ]
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "f92971b0-7dce-489f-80ad-cd0dbdf6211b"
                }
            }
        },
        "GWearCloudPOSTApi1PermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:invokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "FunctionName": {
                    "Ref": "GWearCloudPOST"
                },
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/patient-data",
                        {
                            "__Stage__": "Prod",
                            "__ApiId__": {
                                "Ref": "GWearCloudApi"
                            }
                        }
                    ]
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "03b0feb6-4dbe-402a-b355-6cbfb1cffa7e"
                }
            }
        },
        "GWearCloudGETApi1PermissionTest": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:invokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "FunctionName": {
                    "Ref": "GWearCloudGET"
                },
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/patient-data",
                        {
                            "__Stage__": "*",
                            "__ApiId__": {
                                "Ref": "GWearCloudApi"
                            }
                        }
                    ]
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "8f8e18f6-6b13-46f0-b18f-49b543d734c2"
                }
            }
        },
        "GWearCloudGET": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "S3BucketNameParam"
                    },
                    "S3Key": "GWearCloud-GET.zip"
                },
                "Description": "",
                "Tags": [
                    {
                        "Value": "SAM",
                        "Key": "lambda:createdBy"
                    }
                ],
                "MemorySize": 128,
                "Environment": {
                    "Variables": {
                        "PostgreSQL_URL": {
                            "Fn::Sub": [
                                "postgres://${__RDSUsername__}:${__RDSPassword__}@${__EndpointURL__}:5432/gwear",
                                {
                                    "__RDSUsername__": {
                                        "Ref": "RDSUsername"
                                    },
                                    "__RDSPassword__": {
                                        "Ref": "RDSPassword"
                                    },
                                    "__EndpointURL__": {
                                        "Fn::GetAtt": [
                                            "rdsgwear",
                                            "Endpoint.Address"
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                },
                "Handler": "index.handler",
                "Role": {
                    "Fn::GetAtt": [
                        "RoleRDSAccess",
                        "Arn"
                    ]
                },
                "Timeout": 3,
                "Runtime": "nodejs8.10",
                "VpcConfig": {
                    "SecurityGroupIds": [
                        {
                            "Fn::GetAtt": [
                                "sgPRISMS",
                                "GroupId"
                            ]
                        }
                    ],
                    "SubnetIds": [
                        {
                            "Ref": "gwearsubnet1"
                        },
                        {
                            "Ref": "gwearsubnet2"
                        }
                    ]
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "8ddcb568-af3f-490e-b189-c9d2dbd495db"
                }
            }
        },
        "GWearCloudRdsSetup": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "S3BucketNameParam"
                    },
                    "S3Key": "GWearCloud-RDS-Setup.zip"
                },
                "Description": "",
                "Tags": [
                    {
                        "Value": "SAM",
                        "Key": "lambda:createdBy"
                    }
                ],
                "MemorySize": 128,
                "Environment": {
                    "Variables": {
                        "PostgreSQL_URL": {
                            "Fn::Sub": [
                                "postgres://${__RDSUsername__}:${__RDSPassword__}@${__EndpointURL__}:5432/gwear",
                                {
                                    "__RDSUsername__": {
                                        "Ref": "RDSUsername"
                                    },
                                    "__RDSPassword__": {
                                        "Ref": "RDSPassword"
                                    },
                                    "__EndpointURL__": {
                                        "Fn::GetAtt": [
                                            "rdsgwear",
                                            "Endpoint.Address"
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                },
                "Handler": "index.handler",
                "Role": {
                    "Fn::GetAtt": [
                        "RoleRDSAccess",
                        "Arn"
                    ]
                },
                "Timeout": 3,
                "Runtime": "nodejs8.10",
                "VpcConfig": {
                    "SecurityGroupIds": [
                        {
                            "Fn::GetAtt": [
                                "sgPRISMS",
                                "GroupId"
                            ]
                        }
                    ],
                    "SubnetIds": [
                        {
                            "Ref": "gwearsubnet1"
                        },
                        {
                            "Ref": "gwearsubnet2"
                        }
                    ]
                }
            }
        },
        "GWearCloudPOSTApi1PermissionTest": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:invokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "FunctionName": {
                    "Ref": "GWearCloudPOST"
                },
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/patient-data",
                        {
                            "__Stage__": "*",
                            "__ApiId__": {
                                "Ref": "GWearCloudApi"
                            }
                        }
                    ]
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "c0c8956e-43f0-4b9c-80d7-fe99da2b523f"
                }
            }
        },
        "GWearCloudApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
                "Name": "GWearCloudApi",
                "Description": "Deployed GWearCloud API",
                "Body": {
                    "swagger": "2.0",
                    "info": {
                        "version": "2019-04-19T03:51:53Z",
                        "title": "GWearCloud"
                    },
                    "host": "213xjpuh93.execute-api.us-east-1.amazonaws.com",
                    "basePath": "/beta",
                    "schemes": [
                        "https"
                    ],
                    "paths": {
                        "/": {
                            "get": {
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        },
                                        "headers": {
                                            "Access-Control-Allow-Origin": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "security": [
                                    {
                                        "api_key": []
                                    }
                                ],
                                "x-amazon-apigateway-integration": {
                                    "uri": {
                                        "Fn::Sub": [
                                            "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${__LambdaArn__}/invocations",
                                            {
                                                "__LambdaArn__": {
                                                    "Fn::GetAtt": [
                                                        "GWearCloudGET",
                                                        "Arn"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "responses": {
                                        "default": {
                                            "statusCode": "200",
                                            "responseParameters": {
                                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                                            }
                                        }
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "httpMethod": "POST",
                                    "contentHandling": "CONVERT_TO_TEXT",
                                    "type": "aws"
                                }
                            },
                            "post": {
                                "consumes": [
                                    "application/json"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "parameters": [
                                    {
                                        "in": "body",
                                        "name": "MultiPatientData",
                                        "required": true,
                                        "schema": {
                                            "$ref": "#/definitions/MultiPatientData"
                                        }
                                    }
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        },
                                        "headers": {
                                            "Access-Control-Allow-Origin": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "security": [
                                    {
                                        "api_key": []
                                    }
                                ],
                                "x-amazon-apigateway-integration": {
                                    "uri": {
                                        "Fn::Sub": [
                                            "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${__LambdaArn__}/invocations",
                                            {
                                                "__LambdaArn__": {
                                                    "Fn::GetAtt": [
                                                        "GWearCloudPOST",
                                                        "Arn"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "responses": {
                                        "default": {
                                            "statusCode": "200",
                                            "responseParameters": {
                                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                                            }
                                        }
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "httpMethod": "POST",
                                    "requestTemplates": {
                                        "application/json": "{\n\t\"method\": \"$context.httpMethod\",\n\t\"body\" : $input.json('$'),\n\t\"headers\": {\n\t\t#foreach($param in $input.params().header.keySet())\n\t\t\"$param\": \"$util.escapeJavaScript($input.params().header.get($param))\" #if($foreach.hasNext),#end\n\n\t\t#end\n\t},\n\t\"queryParams\": {\n\t\t#foreach($param in $input.params().querystring.keySet())\n\t\t\"$param\": \"$util.escapeJavaScript($input.params().querystring.get($param))\" #if($foreach.hasNext),#end\n\n\t\t#end\n\t},\n\t\"pathParams\": {\n\t\t#foreach($param in $input.params().path.keySet())\n\t\t\"$param\": \"$util.escapeJavaScript($input.params().path.get($param))\" #if($foreach.hasNext),#end\n\n\t\t#end\n\t}\t\n}"
                                    },
                                    "contentHandling": "CONVERT_TO_TEXT",
                                    "type": "aws"
                                }
                            },
                            "options": {
                                "consumes": [
                                    "application/json"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        },
                                        "headers": {
                                            "Access-Control-Allow-Origin": {
                                                "type": "string"
                                            },
                                            "Access-Control-Allow-Methods": {
                                                "type": "string"
                                            },
                                            "Access-Control-Allow-Headers": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200",
                                            "responseParameters": {
                                                "method.response.header.Access-Control-Allow-Methods": "'POST,GET,OPTIONS'",
                                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                                            }
                                        }
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "requestTemplates": {
                                        "application/json": "{\"statusCode\": 200}"
                                    },
                                    "type": "mock"
                                }
                            }
                        },
                        "/patient-data": {
                            "get": {
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "uri": {
                                        "Fn::Sub": [
                                            "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${__LambdaArn__}/invocations",
                                            {
                                                "__LambdaArn__": {
                                                    "Fn::GetAtt": [
                                                        "GWearCloudGET",
                                                        "Arn"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "responses": {
                                        "default": {
                                            "statusCode": "200"
                                        }
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "httpMethod": "POST",
                                    "contentHandling": "CONVERT_TO_TEXT",
                                    "type": "aws"
                                }
                            },
                            "post": {
                                "consumes": [
                                    "application/json"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "parameters": [
                                    {
                                        "in": "body",
                                        "name": "MultiPatientData",
                                        "required": true,
                                        "schema": {
                                            "$ref": "#/definitions/MultiPatientData"
                                        }
                                    }
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        }
                                    }
                                },
                                "security": [
                                    {
                                        "api_key": []
                                    }
                                ],
                                "x-amazon-apigateway-integration": {
                                    "uri": {
                                        "Fn::Sub": [
                                            "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${__LambdaArn__}/invocations",
                                            {
                                                "__LambdaArn__": {
                                                    "Fn::GetAtt": [
                                                        "GWearCloudPOST",
                                                        "Arn"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "responses": {
                                        "default": {
                                            "statusCode": "200"
                                        }
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "httpMethod": "POST",
                                    "requestTemplates": {
                                        "application/json": "{\n\t\"method\": \"$context.httpMethod\",\n\t\"body\" : $input.json('$'),\n\t\"headers\": {\n\t\t#foreach($param in $input.params().header.keySet())\n\t\t\"$param\": \"$util.escapeJavaScript($input.params().header.get($param))\" #if($foreach.hasNext),#end\n\n\t\t#end\n\t},\n\t\"queryParams\": {\n\t\t#foreach($param in $input.params().querystring.keySet())\n\t\t\"$param\": \"$util.escapeJavaScript($input.params().querystring.get($param))\" #if($foreach.hasNext),#end\n\n\t\t#end\n\t},\n\t\"pathParams\": {\n\t\t#foreach($param in $input.params().path.keySet())\n\t\t\"$param\": \"$util.escapeJavaScript($input.params().path.get($param))\" #if($foreach.hasNext),#end\n\n\t\t#end\n\t}\t\n}"
                                    },
                                    "contentHandling": "CONVERT_TO_TEXT",
                                    "type": "aws"
                                }
                            },
                            "options": {
                                "consumes": [
                                    "application/json"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        },
                                        "headers": {
                                            "Access-Control-Allow-Origin": {
                                                "type": "string"
                                            },
                                            "Access-Control-Allow-Methods": {
                                                "type": "string"
                                            },
                                            "Access-Control-Allow-Headers": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200",
                                            "responseParameters": {
                                                "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'",
                                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
                                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                                            }
                                        }
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "requestTemplates": {
                                        "application/json": "{\"statusCode\": 200}"
                                    },
                                    "type": "mock"
                                }
                            }
                        }
                    },
                    "securityDefinitions": {
                        "api_key": {
                            "type": "apiKey",
                            "name": "x-api-key",
                            "in": "header"
                        }
                    },
                    "definitions": {
                        "Empty": {
                            "type": "object",
                            "title": "Empty Schema"
                        },
                        "PatientData": {
                            "type": "object",
                            "required": [
                                "timestamp"
                            ],
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "timestamp": {
                                    "type": "integer"
                                },
                                "mac": {
                                    "type": "string"
                                },
                                "sensor": {
                                    "type": "string"
                                },
                                "value": {
                                    "type": "number"
                                },
                                "metric": {
                                    "type": "string"
                                }
                            }
                        },
                        "MultiPatientData": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "required": [
                                    "timestamp"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    },
                                    "timestamp": {
                                        "type": "integer"
                                    },
                                    "mac": {
                                        "type": "string"
                                    },
                                    "sensor": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "number"
                                    },
                                    "metric": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "f90cf688-9546-41be-adfd-4f802e2ec455"
                }
            }
        },
        "GWearCloudBetaDeployment": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
                "RestApiId": {
                    "Ref": "GWearCloudApi"
                },
                "Description": "Beta deployment for the GWearCloudAPI",
                "StageName": "beta"
            }
        },
        "GrafanaEcsCluster": {
            "Type": "AWS::ECS::Cluster",
            "Properties": {
                "ClusterName": "grafana-stack"
            }
        },
        "GrafanaAutoScalingGroup": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "VPCZoneIdentifier": [
                    {
                        "Ref": "gwearsubnet1"
                    }
                ],
                "Cooldown": "300",
                "LaunchConfigurationName": {
                    "Ref": "ContainerHostInstances"
                },
                "MinSize": "1",
                "MaxSize": "2",
                "DesiredCapacity": "1",
                "HealthCheckGracePeriod": "0",
                "HealthCheckType": "EC2"
            }
        },
        "ContainerHostInstances": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Properties": {
                "AssociatePublicIpAddress": true,
                "ImageId": { "Fn::FindInMap": [ "RegionMap", { "Ref" : "AWS::Region" }, "ecsami" ]},
                "SecurityGroups": [
                    { "Ref": "sgPRISMS" }
                ],
                "InstanceType": "t2.micro",
                "IamInstanceProfile": { "Ref": "ECSHostEC2InstanceProfile" },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -xe\n",
                                "echo ECS_CLUSTER=",
                                {
                                    "Ref": "GrafanaEcsCluster"
                                },
                                " >> /etc/ecs/ecs.config\n",
                                "yum install -y aws-cfn-bootstrap\n",
                                "/opt/aws/bin/cfn-signal -e $? ",
                                "         --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "         --resource ECSAutoScalingGroup ",
                                "         --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n"
                            ]
                        ]
                    }
                },
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/xvdcz",
                        "Ebs": {
                        "VolumeSize": 22
                        }
                    }
                ]
            }
        },
        "ECSHostEC2InstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "RoleEcsInstance"
                    }
                ]
            }
        },
        "GrafanaTask": {
            "Type": "AWS::ECS::TaskDefinition",
            "Properties": {
                "Family": "grafana-app",
                "ContainerDefinitions": [{
                    "Name": "grafana-app",
                    "Essential": "true",
                    "Image": "grafana/grafana",
                    "PortMappings": [{ 
                        "ContainerPort": 3000,
                        "HostPort": 3000
                    }],
                    "Memory": 800,
                    "MemoryReservation": 400
                }]
            }
        },
        "GrafanaService": {
            "Type": "AWS::ECS::Service",
            "DependsOn": [
                "GrafanaAutoScalingGroup",
                "GrafanaTask"
            ],
            "Properties": {
                "Cluster": { "Ref": "GrafanaEcsCluster" },
                "DesiredCount": 1,
                "TaskDefinition": { "Ref": "GrafanaTask" },
                "LoadBalancers":[

                    {

                        "ContainerName": "grafana-app",

                        "ContainerPort":"3000",

                        "LoadBalancerName":{

                            "Ref":"EcsElb"

                        }

                    }

                ],
                "Role": { "Ref": "RoleEcsInstance" }
            }
        },
        "EcsElb":{

            "Type":"AWS::ElasticLoadBalancing::LoadBalancer",

            "DependsOn":[

                "gwearpublicvpc"

            ],

            "Properties":{

                "Subnets":[

                    {
 "Ref":"gwearsubnet1"
 },

                    {
 "Ref":"gwearsubnet2"
 }

                ],

                "Listeners":[

                {

                    "LoadBalancerPort":"80",

                    "InstancePort":"3000",

                    "Protocol":"HTTP"

                }

                ],

                "SecurityGroups":[

                    {
 "Ref":"sgPRISMS"
 }
                ],

                "HealthCheck":{

                    "Target":"TCP:3000",

                    "HealthyThreshold":"2",

                    "UnhealthyThreshold":"10",

                    "Interval":"30",

                    "Timeout":"15"

                }

            }

        }
    },
    "Outputs": {
        "restApiUrl": {
            "Description": "Endpoint URL for the GWearCloud REST API",
            "Value": {
                "Fn::Sub": "https://${GWearCloudApi}.execute-api.${AWS::Region}.amazonaws.com/beta"
            }
        },
        "grafanaUrl": {
            "Description": "URL for Grafana access",
            "Value": {
                "Fn::GetAtt": ["EcsElb", "DNSName"]
            }
        },
        "postgresqlUrl": {
            "Description": "Full URL for accessing the PostgreSQL database (for use in Grafana)",
            "Value": {
                "Fn::Sub": [
                    "postgres://${__RDSUsername__}:${__RDSPassword__}@${__EndpointURL__}:5432/gwear",
                    {
                        "__RDSUsername__": {
                            "Ref": "RDSUsername"
                        },
                        "__RDSPassword__": {
                            "Ref": "RDSPassword"
                        },
                        "__EndpointURL__": {
                            "Fn::GetAtt": [
                                "rdsgwear",
                                "Endpoint.Address"
                            ]
                        }
                    }
                ]
            } 
        }
    },
    "Metadata": {
        "AWS::CloudFormation::Designer": {
            "8ddcb568-af3f-490e-b189-c9d2dbd495db": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 60,
                    "y": 390
                },
                "z": 1,
                "embeds": []
            },
            "8f8e18f6-6b13-46f0-b18f-49b543d734c2": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 180,
                    "y": 390
                },
                "z": 1,
                "embeds": [],
                "isassociatedwith": [
                    "8ddcb568-af3f-490e-b189-c9d2dbd495db"
                ]
            },
            "f92971b0-7dce-489f-80ad-cd0dbdf6211b": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 300,
                    "y": 390
                },
                "z": 1,
                "embeds": [],
                "isassociatedwith": [
                    "8ddcb568-af3f-490e-b189-c9d2dbd495db"
                ]
            },
            "7dcf69e7-8fd7-4bc5-b161-43cb48c33e94": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 450,
                    "y": 90
                },
                "z": 1,
                "embeds": []
            },
            "c0c8956e-43f0-4b9c-80d7-fe99da2b523f": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 450,
                    "y": 210
                },
                "z": 1,
                "embeds": [],
                "isassociatedwith": [
                    "7dcf69e7-8fd7-4bc5-b161-43cb48c33e94"
                ]
            },
            "03b0feb6-4dbe-402a-b355-6cbfb1cffa7e": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 450,
                    "y": 330
                },
                "z": 1,
                "embeds": [],
                "isassociatedwith": [
                    "7dcf69e7-8fd7-4bc5-b161-43cb48c33e94"
                ]
            },
            "1406b0b9-c7a6-4cbb-a0f0-5b6ebb173846": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 390,
                    "y": 420
                },
                "z": 1,
                "embeds": [],
                "iscontainedinside": [
                    "3509a5de-c1a3-4b97-aa7e-64c7a782237b"
                ]
            },
            "10df573e-d67f-4594-bf67-91f5d53d8fcb": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 510,
                    "y": 420
                },
                "z": 1,
                "embeds": [],
                "iscontainedinside": [
                    "3509a5de-c1a3-4b97-aa7e-64c7a782237b"
                ]
            },
            "80ea2bab-70c0-40a6-a4f2-518ee8cd2e54": {
                "size": {
                    "width": 240,
                    "height": 240
                },
                "position": {
                    "x": 60,
                    "y": 480
                },
                "z": 1,
                "embeds": [
                    "99fda0e8-f542-419e-bbe0-94cc0e759e8d"
                ],
                "iscontainedinside": [
                    "e162b163-95ac-4050-9e87-0dabfe2bf29d",
                    "c2ed2836-1948-437d-af15-352705948eef",
                    "1a3dcc75-031e-42ee-8f0f-9aa37946fdeb",
                    "5033dc7f-d6a7-4b05-ac8d-551a1ff98995",
                    "ebefb557-7d3f-4942-a02b-9d03ea401ffd",
                    "aa5da46c-c897-4965-80b3-bc942b65e0c0"
                ]
            },
            "99fda0e8-f542-419e-bbe0-94cc0e759e8d": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 90,
                    "y": 540
                },
                "z": 2,
                "parent": "80ea2bab-70c0-40a6-a4f2-518ee8cd2e54",
                "embeds": [],
                "isassociatedwith": [
                    "1406b0b9-c7a6-4cbb-a0f0-5b6ebb173846"
                ],
                "iscontainedinside": [
                    "80ea2bab-70c0-40a6-a4f2-518ee8cd2e54",
                    "80ea2bab-70c0-40a6-a4f2-518ee8cd2e54"
                ]
            },
            "6622b35f-6192-46ea-b4bc-e38cd702f12b": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 780,
                    "y": 240
                },
                "z": 1,
                "embeds": []
            },
            "bcb4cd63-cf29-4e11-825d-802a6025cf7f": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 780,
                    "y": 150
                },
                "z": 1,
                "embeds": [],
                "isassociatedwith": [
                    "a591f154-c70c-4a0d-8406-a5b822c5206f",
                    "ca58d627-e83d-43c9-9b4e-a536ca5e36b5",
                    "6622b35f-6192-46ea-b4bc-e38cd702f12b",
                    "a28e8b25-9170-46c9-b037-f8f36f75d9cf"
                ]
            },
            "ca58d627-e83d-43c9-9b4e-a536ca5e36b5": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 900,
                    "y": 150
                },
                "z": 1,
                "embeds": []
            },
            "17bc4478-1aa1-48bb-af3a-b9404e084415": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 270,
                    "y": 90
                },
                "z": 1,
                "embeds": []
            },
            "3509a5de-c1a3-4b97-aa7e-64c7a782237b": {
                "size": {
                    "width": 780,
                    "height": 780
                },
                "position": {
                    "x": 330,
                    "y": 510
                },
                "z": 1,
                "embeds": [
                    "aa5da46c-c897-4965-80b3-bc942b65e0c0",
                    "ebefb557-7d3f-4942-a02b-9d03ea401ffd",
                    "5033dc7f-d6a7-4b05-ac8d-551a1ff98995",
                    "1a3dcc75-031e-42ee-8f0f-9aa37946fdeb",
                    "c2ed2836-1948-437d-af15-352705948eef",
                    "e162b163-95ac-4050-9e87-0dabfe2bf29d",
                    "b0e130a5-879a-485f-b41d-4b38e37a209e"
                ]
            },
            "aa5da46c-c897-4965-80b3-bc942b65e0c0": {
                "size": {
                    "width": 150,
                    "height": 150
                },
                "position": {
                    "x": 570,
                    "y": 990
                },
                "z": 2,
                "parent": "3509a5de-c1a3-4b97-aa7e-64c7a782237b",
                "embeds": [],
                "iscontainedinside": [
                    "3509a5de-c1a3-4b97-aa7e-64c7a782237b"
                ]
            },
            "ebefb557-7d3f-4942-a02b-9d03ea401ffd": {
                "size": {
                    "width": 150,
                    "height": 150
                },
                "position": {
                    "x": 870,
                    "y": 780
                },
                "z": 2,
                "parent": "3509a5de-c1a3-4b97-aa7e-64c7a782237b",
                "embeds": [],
                "iscontainedinside": [
                    "3509a5de-c1a3-4b97-aa7e-64c7a782237b"
                ]
            },
            "5033dc7f-d6a7-4b05-ac8d-551a1ff98995": {
                "size": {
                    "width": 150,
                    "height": 150
                },
                "position": {
                    "x": 870,
                    "y": 570
                },
                "z": 2,
                "parent": "3509a5de-c1a3-4b97-aa7e-64c7a782237b",
                "embeds": [],
                "iscontainedinside": [
                    "3509a5de-c1a3-4b97-aa7e-64c7a782237b"
                ]
            },
            "1a3dcc75-031e-42ee-8f0f-9aa37946fdeb": {
                "size": {
                    "width": 150,
                    "height": 150
                },
                "position": {
                    "x": 360,
                    "y": 870
                },
                "z": 2,
                "parent": "3509a5de-c1a3-4b97-aa7e-64c7a782237b",
                "embeds": [],
                "iscontainedinside": [
                    "3509a5de-c1a3-4b97-aa7e-64c7a782237b"
                ]
            },
            "c2ed2836-1948-437d-af15-352705948eef": {
                "size": {
                    "width": 150,
                    "height": 150
                },
                "position": {
                    "x": 660,
                    "y": 780
                },
                "z": 2,
                "parent": "3509a5de-c1a3-4b97-aa7e-64c7a782237b",
                "embeds": [],
                "iscontainedinside": [
                    "3509a5de-c1a3-4b97-aa7e-64c7a782237b"
                ]
            },
            "e162b163-95ac-4050-9e87-0dabfe2bf29d": {
                "size": {
                    "width": 150,
                    "height": 150
                },
                "position": {
                    "x": 660,
                    "y": 570
                },
                "z": 2,
                "parent": "3509a5de-c1a3-4b97-aa7e-64c7a782237b",
                "embeds": [],
                "iscontainedinside": [
                    "3509a5de-c1a3-4b97-aa7e-64c7a782237b"
                ]
            },
            "b0e130a5-879a-485f-b41d-4b38e37a209e": {
                "size": {
                    "width": 240,
                    "height": 240
                },
                "position": {
                    "x": 360,
                    "y": 570
                },
                "z": 2,
                "parent": "3509a5de-c1a3-4b97-aa7e-64c7a782237b",
                "embeds": [
                    "a8ab3214-52fe-49e4-9303-65786d790437"
                ],
                "iscontainedinside": [
                    "3509a5de-c1a3-4b97-aa7e-64c7a782237b"
                ]
            },
            "79b37fc0-9716-47e3-8c69-bdfa7a27514f": {
                "source": {
                    "id": "3509a5de-c1a3-4b97-aa7e-64c7a782237b"
                },
                "target": {
                    "id": "17bc4478-1aa1-48bb-af3a-b9404e084415"
                }
            },
            "a8ab3214-52fe-49e4-9303-65786d790437": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 390,
                    "y": 630
                },
                "z": 3,
                "parent": "b0e130a5-879a-485f-b41d-4b38e37a209e",
                "embeds": [],
                "isassociatedwith": [
                    "17bc4478-1aa1-48bb-af3a-b9404e084415"
                ],
                "iscontainedinside": [
                    "b0e130a5-879a-485f-b41d-4b38e37a209e"
                ],
                "dependson": [
                    "79b37fc0-9716-47e3-8c69-bdfa7a27514f"
                ]
            },
            "a28e8b25-9170-46c9-b037-f8f36f75d9cf": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 540,
                    "y": 90
                },
                "z": 1,
                "embeds": []
            },
            "f90cf688-9546-41be-adfd-4f802e2ec455": {
                "size": {
                    "width": 150,
                    "height": 150
                },
                "position": {
                    "x": 60,
                    "y": 90
                },
                "z": 1,
                "embeds": []
            },
            "69628b57-2fe0-44eb-8ff3-7a6c97171029": {
                "source": {
                    "id": "bcb4cd63-cf29-4e11-825d-802a6025cf7f"
                },
                "target": {
                    "id": "a28e8b25-9170-46c9-b037-f8f36f75d9cf"
                },
                "z": 15
            }
        }
    }
}
